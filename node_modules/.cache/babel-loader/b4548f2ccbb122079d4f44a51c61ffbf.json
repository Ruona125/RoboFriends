{"ast":null,"code":"// import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n// import CardList from '../components/CardList';\n// import SearchBox from '../components/SearchBox';\n// import './App.css';\n// import Scroll from '../components/Scroll';\n// import { setSearchField, requestRobots } from '../action';\n// const mapStateToProps = (state) => {\n//   return {\n//     searchField: state.searchRobots.searchField,\n//     robots: state.requestRobots.robots,\n//     isPending: state.requestRobots.isPending,\n//     error: state.requestRobots.error,\n//   };\n// };\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n//     onRequestRobots: () => dispatch(requestRobots()),\n//   };\n// };\n// class App extends Component {\n//   // constructor() {\n//   //   super();\n//   //   this.state = {\n//   //     robots: [],\n//   //     // searchField: '',\n//   //   };\n//   // }\n//   componentDidMount() {\n//     this.props.onRequestRobots();\n//     // fetch('https://jsonplaceholder.typicode.com/users')\n//     //   .then((response) => {\n//     //     return response.json();\n//     //   })\n//     //   .then((users) => {\n//     //     this.setState({ robots: users });\n//     //     });\n//   }\n//   // onSearchChange = (event) => {\n//   //   this.setState({ searchField: event.target.value });\n//   // };\n//   render() {\n//     // const { robots } = this.state;\n//     const { searchField, onSearchChange, robots, isPending } = this.props; //this is for the redux\n//     const filteredRobots = robots.filter((robot) => {\n//       return robot.name.toLowerCase().includes(searchField.toLowerCase());\n//     });\n//     return isPending ? (\n//       <h1>Loading...</h1>\n//     ) : (\n//       <div className=\"tc\">\n//         <h1 className=\"f1\">RoboFriends</h1>\n//         <SearchBox searchChange={onSearchChange} />\n//         <Scroll>\n//           <CardList robots={filteredRobots} />\n//         </Scroll>\n//       </div>\n//     );\n//   }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/ruona/Desktop/RoboFriends/src/containers/App.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n// import CardList from '../components/CardList';\n// import SearchBox from '../components/SearchBox';\n// import './App.css';\n// import Scroll from '../components/Scroll';\n// import { setSearchField, requestRobots } from '../action';\n\n// const mapStateToProps = (state) => {\n//   return {\n//     searchField: state.searchRobots.searchField,\n//     robots: state.requestRobots.robots,\n//     isPending: state.requestRobots.isPending,\n//     error: state.requestRobots.error,\n//   };\n// };\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n//     onRequestRobots: () => dispatch(requestRobots()),\n//   };\n// };\n// class App extends Component {\n//   // constructor() {\n//   //   super();\n//   //   this.state = {\n//   //     robots: [],\n//   //     // searchField: '',\n//   //   };\n//   // }\n\n//   componentDidMount() {\n//     this.props.onRequestRobots();\n\n//     // fetch('https://jsonplaceholder.typicode.com/users')\n//     //   .then((response) => {\n//     //     return response.json();\n//     //   })\n//     //   .then((users) => {\n//     //     this.setState({ robots: users });\n//     //     });\n//   }\n\n//   // onSearchChange = (event) => {\n//   //   this.setState({ searchField: event.target.value });\n//   // };\n\n//   render() {\n//     // const { robots } = this.state;\n//     const { searchField, onSearchChange, robots, isPending } = this.props; //this is for the redux\n\n//     const filteredRobots = robots.filter((robot) => {\n//       return robot.name.toLowerCase().includes(searchField.toLowerCase());\n//     });\n//     return isPending ? (\n//       <h1>Loading...</h1>\n//     ) : (\n//       <div className=\"tc\">\n//         <h1 className=\"f1\">RoboFriends</h1>\n//         <SearchBox searchChange={onSearchChange} />\n//         <Scroll>\n//           <CardList robots={filteredRobots} />\n//         </Scroll>\n//       </div>\n//     );\n//   }\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}